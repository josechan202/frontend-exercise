{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StudentTable = _resolveComponent(\"StudentTable\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\"    <AddStudentForm @add=\\\"addStudent\\\" />\"), _createVNode(_component_StudentTable, {\n    students: $data.students,\n    onDelete: $options.deleteStudent\n  }, null, 8 /* PROPS */, [\"students\", \"onDelete\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createVNode","_component_StudentTable","students","$data","onDelete","$options","deleteStudent"],"sources":["/Users/josechan/Repository/students-front-end/src/pages/StudentsDashboard.vue"],"sourcesContent":["<template>\n  <div>\n<!--    <AddStudentForm @add=\"addStudent\" />-->\n    <StudentTable :students=\"students\" @delete=\"deleteStudent\" />\n  </div>\n</template>\n\n<script>\nimport { fetchStudents, addStudent, deleteStudent } from '@/api/students';\n// import AddStudentForm from '@/components/AddStudentForm.vue';\nimport StudentTable from '@/components/StudentTable.vue';\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Students',\n  components: {\n    // AddStudentForm,\n    StudentTable,\n  },\n  data() {\n    return {\n      students: [],\n    };\n  },\n  methods: {\n    async loadStudents() {\n      try {\n        const response = await fetchStudents();\n        this.students = response.data;\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    },\n    async addStudent(newStudent) {\n      try {\n        const response = await addStudent(newStudent);\n        this.students.push(response.data);\n      } catch (error) {\n        console.error('Error adding student:', error);\n      }\n    },\n    async deleteStudent(id) {\n      try {\n        await deleteStudent(id);\n        this.students = this.students.filter(student => student.id !== id);\n      } catch (error) {\n        console.error('Error deleting student:', error);\n      }\n    },\n  },\n  mounted() {\n    this.loadStudents();\n  },\n};\n</script>\n\n<style>\n/* Optional: Add some styling here */\n</style>"],"mappings":";;;uBACEA,mBAAA,CAGM,cAFRC,mBAAA,8CAA+C,EAC3CC,YAAA,CAA6DC,uBAAA;IAA9CC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,QAAM,EAAEC,QAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}